<?php

namespace Proxies\__CG__\Sdz\RentCarBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Voiture extends \Sdz\RentCarBundle\Entity\Voiture implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'voitureNom', 'marque', 'boiteVitesse', 'typeEssence', 'description', 'nombreKilometre', 'dispo');
        }

        return array('__isInitialized__', 'id', 'voitureNom', 'marque', 'boiteVitesse', 'typeEssence', 'description', 'nombreKilometre', 'dispo');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Voiture $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setVoitureNom($voitureNom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVoitureNom', array($voitureNom));

        return parent::setVoitureNom($voitureNom);
    }

    /**
     * {@inheritDoc}
     */
    public function getVoitureNom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVoitureNom', array());

        return parent::getVoitureNom();
    }

    /**
     * {@inheritDoc}
     */
    public function setMarque($marque)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMarque', array($marque));

        return parent::setMarque($marque);
    }

    /**
     * {@inheritDoc}
     */
    public function getMarque()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMarque', array());

        return parent::getMarque();
    }

    /**
     * {@inheritDoc}
     */
    public function setBoiteVitesse($boiteVitesse)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBoiteVitesse', array($boiteVitesse));

        return parent::setBoiteVitesse($boiteVitesse);
    }

    /**
     * {@inheritDoc}
     */
    public function getBoiteVitesse()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBoiteVitesse', array());

        return parent::getBoiteVitesse();
    }

    /**
     * {@inheritDoc}
     */
    public function setTypeEssence($typeEssence)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTypeEssence', array($typeEssence));

        return parent::setTypeEssence($typeEssence);
    }

    /**
     * {@inheritDoc}
     */
    public function getTypeEssence()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTypeEssence', array());

        return parent::getTypeEssence();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setNombreKilometre($nombreKilometre)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNombreKilometre', array($nombreKilometre));

        return parent::setNombreKilometre($nombreKilometre);
    }

    /**
     * {@inheritDoc}
     */
    public function getNombreKilometre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNombreKilometre', array());

        return parent::getNombreKilometre();
    }

    /**
     * {@inheritDoc}
     */
    public function setDispo($dispo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDispo', array($dispo));

        return parent::setDispo($dispo);
    }

    /**
     * {@inheritDoc}
     */
    public function getDispo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDispo', array());

        return parent::getDispo();
    }

}
